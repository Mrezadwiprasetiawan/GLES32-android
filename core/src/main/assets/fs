#version 320 es
precision highp float;

in vec3 FragPos;
in vec3 Normal;

uniform vec3 LightPos;
uniform vec3 ViewPos;
uniform vec3 LightCol;
uniform vec3 ObjectCol;

out vec4 FragColor;

void main()
{
    // Ambient lighting
    float ambientStrength = 0.1;
    vec3 ambient = ambientStrength * LightCol;
    
    // Diffuse lighting
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(LightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * LightCol;
    
    // Specular lighting
    float specularStrength = 0.5;
    vec3 viewDir = normalize(ViewPos - FragPos);
    vec3 reflectDir = reflect(-lightDir, norm);
    vec3 halfWayDir=normalize(viewDir+lightDir);
    float spec = pow(max(dot(viewDir, halfWayDir), 0.0), 32.0);
    vec3 specular = specularStrength * spec * LightCol;
    
    vec3 result = (ambient + diffuse) * ObjectCol+specular;
    FragColor = vec4(result, 1.0);
}